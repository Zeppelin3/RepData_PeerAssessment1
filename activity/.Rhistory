library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("points", "smooth"))
qplot(displ, hwy, data=mpg, color=drv, geom=c(points, smooth))
qplot(displ, hwy, data=mpg, color=drv, geom=c("points", "smooth"))
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom=boxplot)
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets=.~drv)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
qplot(displ,  hwy, data=mpg, geom=c("point", "smooth", facets=.~drv))
qplot(displ,  hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv))
qplot(displ,  hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv)
g<-ggplot(aes(displ, hwy))
g<-ggplot(mpg, aes(displ, hwy))
summary(g)
g
g+geom_point()
g+geom_point(), geom_smooth()
g
g+geom_point()+ geom_smooth()
g+geom_point()+ geom_smooth(method=lm)
g+geom_point()+ geom_smooth(method="lm")
g+geom_point()+ geom_smooth(method="lm")+ facet_grid(.~drv)
g+geom_point()+ geom_smooth(method="lm")+ facet_grid(.~drv)=
g+geom_point()+ geom_smooth(method="lm")+ facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(size=4, alpha=1/2, aes(color=drv))
g+geom_point(aes
g+geom_point(aes
g+geom_point(aes(color=drv), labs(title="Swirl Rules!", labs(x="Displacement", y="Hwy Mileage"))
)
g+geom_point(aes(color=drv))+ labs(title="Swirl Rules!")+ labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=1/2)+ geom_smooth(size=4, linetype=3, method="lm")
g+geom_point(aes(color=drv), size=2, alpha=1/2)+ geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv))+ theme_bw(base_family = "Times")
plot(myx, myy, type="l", ylim=c(-3,3))
g<-ggplot(testdata, aes(x=myx, y=myy))
g<-ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+ coord_cartesian(ylim(-3,3))
g+geom_line()+ coord_cartesian(ylim=-3,3)
g+geom_line()+ coord_cartesian(ylim=-3,3))
g+geom_line()+ coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+ facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+ facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm",se=False, size=2, color="black")
g+geom_point()+ facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm",se=FALSE, size=2, color="black")
g+geom_point()+ facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm",se=FALSE, size=2, color="black")+ label_both(x="Displacement", y="Highway Mileage", title="Swirl RUles!")
g+geom_point()+ facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm",se=FALSE, size=2, color="black")+ labs(x="Displacement", y="Highway Mileage", title="Swirl RUles!")
g+geom_point()+ facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", size=2, se=FALSE, color="black")+ labs(x="Displacement", y="Highway Mileage", title="Swirl RUles!")
g + geom_point() +facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamondsÂ£price)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth(method="lm"))
j
hoiug
help
qplot(carat, price, data=diamonds, color=cut)+ geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut, facets = .~cut)+ geom_smooth(method="lm")
g<-ggplot(diamonds, aes(depth, price))
g
summary(g)
g+geom_point(alpha=1/2)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat, seq(0,1 length=4), na.rm=TRUE)
cutpoints<-quantile(diamonds$carat, seq(0,1, length=4), na.rm=TRUE)
cutpoints
cut(diamonds$carat, cutpoints)
diamonds$car2<-cut(diamonds$carat, cutpoints)
g<- ggplot(diamonds, aes(depth, price))
g+ geom_point(alpha=1/3)+ facet_grid(cut~car2)
diamonds[myd,]
g+ geom_point(alpha=1/3)+ facet_grid(cut~car2)+geom=smooth(method="lm", size=3, color="pink")
g+ geom_point(alpha=1/3)+ facet_grid(cut~car2)+geom_smooth(method="lm", size=3, color="pink")
g+ geom_point(alpha=1/3)+ facet_grid(cut~car2)+geom=smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat, price))+ geom_boxplot(), facet_grid(.~cut)
help
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
names(kmeans)
names(kmeans())
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hc<-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=4, col="red")
abline(h=.4, col="red")
5
5
12
abline(h=0.3, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
denmt
plot(denmt)
distmt
library(swirl)
swirl()
cmat
points(cx, cy, col=c)
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x,y,cx,cy)
apply(disTmp, 2, which.min)
apply(distTmp, 2, which.min)
points(x.y. pch=19, cex=2, col=cols1[newClust])
points(x,y, pch=19, cex=2, col=cols1[newClust])
tapply(vector, index, function)
tapply(x, newClust, apply)
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8 cex=2, lwd=2)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y,newx,newCy)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y, pch=19, cex=2, col=cols1[newClust])
points(x,y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=8, cex=2, lwd=2)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers=3)
kmOB$iter
kmObj$iter
plot(x,y,col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("b;ack", "red", "green"), pch=3, cex=3, lwd=3)
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%x%diag%x%t(matv)
matu %x% diag %x% t(matv)
matu %*% diag %*% t(matv)
scale(mat)
svd(scale(matr)
)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-svd1$u%*%svd1$d%*%svd1$d
a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
myImage(a1)
f
feogks
a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
Type a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
)
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,563:563])
names(ssd[563:563])
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$acticity)
table(ssd$activity)
sub1<-subset(ssd, subject=1)
sub1<-subset(ssd, subject==1)
sub1
dim(sub1)
names(sub1, 12)
names(sub1[1:12])
View(myedit)
myedit("showXY.R")
showMe(1:6)
mdist(sub1[,1:3])
mdist<-dist(sub1[,1:3])
hclustering<-hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
play()
myplclust(hclustering, col=sub1$activity)
nxt()
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon<-which.mac(svd1$v[,2])
maxCon<-which.max(svd1$v[,2])
mdist<-dist(sub1([10:12], maxCon))
mdist<-dist(sub1[10:12], maxCon)
lrjng
;qkenrflk;nerflkn
help
mdist<-dist(sub1[,c(10:12, maxCon)])
hclustering<-hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kclust<-kmean(sub1[,-c(562:563)], centers = 6)
kclust<-kmeans(sub1[,-c(562:563)], centers = 6)
kClust<-kmeans(sub1[,-c(562:563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust<-kmeans(sub1[,-c(562:563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying<-kClust$size==29
laying<-whcih(kClust$size==29)
laying<-which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab="Laying Cluster")
names(sub1[1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Walking Cluster")
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames<-strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
xo<-pm0$Sample.Value
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <-
(cnames[[1]][wcol])
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
setwd("C:/Users/chapp/Documents/Coursera/Reproducable research")
ls()
dir()
read.csv("repdata%2Fdata%2Factivity")
dir()
setwd("C:/Users/chapp/Documents/Coursera/Reproducable research/activity")
setwd("C:/Users/chapp/Documents/Coursera/Reproducable research/RepData_PeerAssessment1/activity")
setwd("C:/Users/chapp/Documents/Coursera/Reproducable research/RepData_PeerAssessment1/")
dir()
read.csv("activity.zip")
act<-read.csv("activity.zip")
head(act)
act<-read.csv("activity")
setwd("C:/Users/chapp/Documents/Coursera/Reproducable research/RepData_PeerAssessment1/activity")
act<-read.csv("activity.cvs")
act<-read.csv("activity")
dir
dir()
act<-read.csv("activity.cvs")
setwd("C:/Users/chapp/Documents/Coursera/Reproducable research/RepData_PeerAssessment1/activity")
dir()
activity<-read.csv("activity.csv")
rm(list = ls())
activity<-read.csv("activity.csv")
head(activity)
str(activity)
tail(activity)
head(activity,30)
head(activity,1000:1050)
head(activity,1000)
?aggregate
aggact<-aggregate(steps ~ date, activity, mean)
head(aggact)
hist(aggact)
hist(as.numeric(aggact))
hist(activity$steps)
aggact<-aggregate(steps ~ date, activity, sum)
hist(activity$steps)
hist(aggact$steps)
aggact
hist(aggact)
hist(aggact$steps, breaks=aggact$date)
hist(aggact$steps, breaks=53)
> hist(aggact$steps, breaks=53, rug=TRUE)
?hist
> hist(aggact$steps, breaks=53, rug(aggact$date)
> hist(aggact$steps, breaks=53, xlab = Steps per day)
>hist(aggact$steps, breaks=53, xlab = Steps per day)
hist(aggact$steps, breaks=53, xlab = Steps per day)
hist(aggact$steps, breaks=53, xlab = "Steps per day")
hist(aggact$steps, breaks=53, xlab = "Steps per day", rug(length(aggact)))
hist(aggact$steps, breaks=53, xlab = "Steps per day", rug(53))
hist(aggact$steps, breaks=53, xlab = "Steps per day")
rug()
rug(aggact)
hist(aggact$steps, breaks=53, xlab = "Steps per day", main="Histogram of number of steps per day")
mean(aggact$steps)
median(aggact$steps)
names(aggdata)
names(aggact)
names(activity)
aggact1<-aggregate(steps ~ interval+date, activity, mean)
aggact1
?aggregate
aggact1<-aggregate(steps ~ interval, activity, mean)
aggact1
tail(aggact1)
?plot
with(aggact1(plot(interval, steps)))
grap<-with(aggact1(plot(interval, steps)))
plot(interval, steps, data=aggact1)
plot(aggact1$interval, aggact1$steps)
plot(aggact1$interval, aggact1$steps, type="l", xlab="Intervals", ylab="Steps taken (mean of all days",
main = "Time series plot of steps per interval")
plot(aggact1$interval, aggact1$steps, type="l", xlab="Intervals", ylab="Steps taken",
main = "Time series plot of steps per interval")
summary(aggact1)
max(aggact1$interval)
max(aggact1$steps)
aggact1[206.1698]
which.max(aggact1$steps)
aggact1
aggact1[which.max(aggact$steps),]
aggact1[which.max(aggact1$steps),]
is.na(activity)
sun(is.na(activity))
sum(is.na(activity))
sum(!is.na(activity))
nrow(is.na(aggact1))
?nrow
nrow(!is.na(aggact1))
nrow(!is.na(activity))
nrow(is.na(activity))
head(acticity)
head(activity)
na_act <- which(is.na(activity$steps))
na_act
?rep
mean_vec <- rep(mean(activity$steps, na.rm=TRUE), times=length(na_act))
mean_vec
mean(activity$steps)
mean(activity$steps, na.rm=TRUE)
activity[na_act, "steps"] <- mean_vec
act1 <- activity[na_act, "steps"] <- mean_vec
act1
mean_vec
activity
summary(activity$steps)
new_activity <- activity[na_act, "steps"] <- mean_vec
new_activity
hist(aggact$steps, breaks=53, xlab = "Steps per day", main="Histogram of number of steps per day")
aggact2<-aggregate(steps ~ date, activity, sum)
hist(aggact2$steps, breaks=53, xlab = "Steps per day", main="Histogram of number of steps per day")
mean(aggact2$steps)
median(aggact2$steps)
mean(aggact$steps)
median(aggact$steps)
setwd("C:/Users/chapp/Documents/Coursera/Reproducable research/RepData_PeerAssessment1/activity")
activity<-read.csv("activity.csv")
aggact<-aggregate(steps ~ date, activity, sum)
hist(aggact$steps, breaks=53, xlab = "Steps per day", main="Histogram of number of steps per day")
mean(aggact$steps)
median(aggact$steps)
aggact1<-aggregate(steps ~ interval, activity, mean)
plot(aggact1$interval, aggact1$steps, type="l", xlab="Intervals", ylab="Steps taken",
main = "Time series plot of steps per interval")
aggact1[which.max(aggact1$steps),]
sum(is.na(activity))
na_act <- which(is.na(activity$steps))
mean_vec <- rep(mean(activity$steps, na.rm=TRUE), times=length(na_act))
activity[na_act, "steps"] <- mean_vec
aggact2<-aggregate(steps ~ date, activity, sum)
hist(aggact2$steps, breaks=53, xlab = "Steps per day", main="Histogram of number of steps per day")
mean(aggact2$steps)
median(aggact2$steps)
aggact
activity1 <- (activity[na_act, "steps"] <- mean_vec)
acyivity1<-activity
setwd("C:/Users/chapp/Documents/Coursera/Reproducable research/RepData_PeerAssessment1/activity")
activity<-read.csv("activity.csv")
aggact<-aggregate(steps ~ date, activity, sum)
hist(aggact$steps, breaks=53, xlab = "Steps per day", main="Histogram of number of steps per day")
mean(aggact$steps)
median(aggact$steps)
aggact1<-aggregate(steps ~ interval, activity, mean)
plot(aggact1$interval, aggact1$steps, type="l", xlab="Intervals", ylab="Steps taken",
main = "Time series plot of steps per interval")
aggact1[which.max(aggact1$steps),]
sum(is.na(activity))
na_act <- which(is.na(activity$steps))
mean_vec <- rep(mean(activity$steps, na.rm=TRUE), times=length(na_act))
acyivity1<-activity
activity1[na_act, "steps"] <- mean_vec)
aggact2<-aggregate(steps ~ date, activity, sum)
hist(aggact2$steps, breaks=53, xlab = "Steps per day", main="Histogram of number of steps per day")
mean(aggact2$steps)
median(aggact2$steps)
activity<-read.csv("activity.csv")
aggact<-aggregate(steps ~ date, activity, sum)
hist(aggact$steps, breaks=53, xlab = "Steps per day", main="Histogram of number of steps per day")
mean(aggact$steps)
median(aggact$steps)
aggact1<-aggregate(steps ~ interval, activity, mean)
plot(aggact1$interval, aggact1$steps, type="l", xlab="Intervals", ylab="Steps taken",
main = "Time series plot of steps per interval")
aggact1[which.max(aggact1$steps),]
sum(is.na(activity))
na_act <- which(is.na(activity$steps))
mean_vec <- rep(mean(activity$steps, na.rm=TRUE), times=length(na_act))
acyivity1<-activity
activity1[na_act, "steps"] <- mean_vec)
aggact2<-aggregate(steps ~ date, activity1, sum)
hist(aggact2$steps, breaks=53, xlab = "Steps per day", main="Histogram of number of steps per day")
mean(aggact2$steps)
median(aggact2$steps)
rm(list=ls())
activity<-read.csv("activity.csv")
aggact<-aggregate(steps ~ date, activity, sum)
hist(aggact$steps, breaks=53, xlab = "Steps per day", main="Histogram of number of steps per day")
mean(aggact$steps)
median(aggact$steps)
plot(aggact1$interval, aggact1$steps, type="l", xlab="Intervals", ylab="Steps taken",
main = "Time series plot of steps per interval")
aggact1<-aggregate(steps ~ interval, activity, mean)
plot(aggact1$interval, aggact1$steps, type="l", xlab="Intervals", ylab="Steps taken",
main = "Time series plot of steps per interval")
aggact1[which.max(aggact1$steps),]
activity1<-activity
sum(is.na(activity))
sum(is.na(activity1))
na_act <- which(is.na(activity1$steps))
mean_vec <- rep(mean(activity1$steps, na.rm=TRUE), times=length(na_act))
activity1[na_act, "steps"] <- mean_vec)
activity1[na_act, "steps"] <- mean_vec
aggact2<-aggregate(steps ~ date, activity1, sum)
hist(aggact2$steps, breaks=53, xlab = "Steps per day", main="Histogram of number of steps per day")
mean(aggact2$steps)
median(aggact2$steps)
sum(activity$steps)
mean(aggact$steps)
median(aggact$steps)
aggact<-aggregate(steps ~ date, activity, sum, na.rm=TRUE)
mean(aggact$steps)
median(aggact$steps)
?weekdays
weekday
weekday(activity1$date)
weekdays(activity1$date)
weekdays(as.POSIXct(activity1$date), abbreviate = F)
StepsPerDay <- tapply(activity$steps, activity$date, sum)
StepsPerDay
aggact<-aggregate(steps ~ date, activity, sum)
aggact
?aggregate
aggact<-aggregate(steps ~ date, activity, sum, na.action = T)
aggact<-aggregate(steps ~ date, activity, sum, na.action = na.omit)
aggact
aggact<-aggregate(steps ~ date, activity, sum, na.action = na.pass)
aggact
hist(aggact$steps, breaks=53, xlab = "Steps per day", main="Histogram of number of steps per day")
mean(aggact$steps)
mean(aggact$steps, na.rm=TRUE)
median(aggact$steps, na.rm=TRUE)
?ifelse
str(activity1)
activity1$day <- ifelse(weekdays(as.Date(activity1$date)) == "Saturday" |
weekdays(as.Date(activity.imputed$date)) == "Sunday", "weekend", "weekday")
activity1$day <- ifelse(weekdays(as.Date(activity1$date)) == "Saturday" |
weekdays(as.Date(activity1$date)) == "Sunday", "weekend", "weekday")
head(activity1)
tail(activity1)
head(activity1, 1999)
head(activity1, 30)
head(activity1, 30, 50)
?head
